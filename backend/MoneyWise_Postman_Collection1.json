{
  "info": {
    "name": "MoneyWise API",
    "description": "Collection complète pour tester l'API MoneyWise - Gestion des finances personnelles",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:3000/api",
      "type": "string"
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{token}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/health",
          "host": ["{{base_url}}"],
          "path": ["health"]
        },
        "description": "Vérifier que le serveur répond"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Response has message\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.message).to.exist;",
              "    pm.expect(jsonData.timestamp).to.exist;",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Auth",
      "item": [
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test100@moneywise.com\",\n  \"password\": \"testpassword123\",\n  \"firstName\": \"Test\",\n  \"lastName\": \"User\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            },
            "description": "Inscription d'un nouvel utilisateur"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.token).to.exist;",
                  "    pm.expect(jsonData.utilisateur).to.exist;",
                  "});",
                  "",
                  "if (pm.response.code === 201) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set(\"token\", jsonData.token);",
                  "    console.log(\"Token saved: \" + jsonData.token);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@moneywise.com\",\n  \"password\": \"testpassword123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            },
            "description": "Connexion utilisateur"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.token).to.exist;",
                  "});",
                  "",
                  "if (pm.response.code === 200) {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set(\"token\", jsonData.token);",
                  "    console.log(\"Token saved: \" + jsonData.token);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Profile",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/auth/profile",
              "host": ["{{base_url}}"],
              "path": ["auth", "profile"]
            },
            "description": "Obtenir le profil utilisateur"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"User profile returned\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.utilisateur).to.exist;",
                  "    pm.expect(jsonData.utilisateur.email).to.exist;",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Categories",
      "item": [
        {
          "name": "Get All Categories",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/categories",
              "host": ["{{base_url}}"],
              "path": ["categories"]
            },
            "description": "Obtenir toutes les catégories"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Categories array returned\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.categories).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Category",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Restaurant\",\n  \"color\": \"#FF6B6B\",\n  \"type\": \"depense\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/categories",
              "host": ["{{base_url}}"],
              "path": ["categories"]
            },
            "description": "Créer une nouvelle catégorie"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Category created\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.categorie).to.exist;",
                  "    pm.expect(jsonData.categorie.nom).to.eql(\"Restaurant\");",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Transactions",
      "item": [
        {
          "name": "Get Balance",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/transactions/balance/summary",
              "host": ["{{base_url}}"],
              "path": ["transactions", "balance", "summary"]
            },
            "description": "Obtenir le solde"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Balance data returned\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.solde).to.exist;",
                  "    pm.expect(jsonData.total_revenus).to.exist;",
                  "    pm.expect(jsonData.total_depenses).to.exist;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get All Transactions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/transactions",
              "host": ["{{base_url}}"],
              "path": ["transactions"]
            },
            "description": "Obtenir toutes les transactions"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Transactions array returned\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.transactions).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Create Transaction",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"depense\",\n  \"amount\": 50.00,\n  \"categoryId\": 1,\n  \"description\": \"Courses alimentaires\",\n  \"date\": \"2024-01-15\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/transactions",
              "host": ["{{base_url}}"],
              "path": ["transactions"]
            },
            "description": "Créer une nouvelle transaction"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Transaction created\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.transaction).to.exist;",
                  "    pm.expect(jsonData.transaction.montant).to.eql(50);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Dashboard",
      "item": [
        {
          "name": "Get Summary",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/dashboard/summary",
              "host": ["{{base_url}}"],
              "path": ["dashboard", "summary"]
            },
            "description": "Obtenir le résumé du tableau de bord"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Dashboard data returned\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.solde).to.exist;",
                  "    pm.expect(jsonData.statistiques).to.exist;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Get Charts Data",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/dashboard/charts?startDate=2024-01-01&endDate=2024-12-31",
              "host": ["{{base_url}}"],
              "path": ["dashboard", "charts"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2024-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2024-12-31"
                }
              ]
            },
            "description": "Obtenir les données pour les graphiques"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Charts data returned\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.donneesGraphiques).to.exist;",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Export",
      "item": [
        {
          "name": "Export CSV",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/export/transactions/csv?startDate=2024-01-01&endDate=2024-12-31",
              "host": ["{{base_url}}"],
              "path": ["export", "transactions", "csv"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2024-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2024-12-31"
                }
              ]
            },
            "description": "Exporter les transactions en CSV"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"CSV content returned\", function () {",
                  "    pm.expect(pm.response.text()).to.include(\"Date,Type,Montant\");",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Export JSON",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/export/transactions/json?startDate=2024-01-01&endDate=2024-12-31",
              "host": ["{{base_url}}"],
              "path": ["export", "transactions", "json"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2024-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2024-12-31"
                }
              ]
            },
            "description": "Exporter les transactions en JSON"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"JSON export data returned\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.transactions).to.be.an('array');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}
